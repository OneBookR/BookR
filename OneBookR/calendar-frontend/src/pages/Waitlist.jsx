import React, { useState, useEffect } from 'react';
import { 
  Container, Typography, Box, Button, TextField, Paper, Grid, 
  Accordion, AccordionSummary, AccordionDetails,
  Alert, Snackbar
} from '@mui/material';
import ExpandMoreIcon from '@mui/icons-material/ExpandMore';
import { API_BASE_URL } from '../config';


const Waitlist = () => {
  const [email, setEmail] = useState('');
  const [name, setName] = useState('');
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [toast, setToast] = useState({ open: false, message: '', severity: 'success' });
  const [waitlistCount, setWaitlistCount] = useState(0);
  const [successOverlay, setSuccessOverlay] = useState(false);
  const [shareLinks, setShareLinks] = useState(null);

  // üëá H√§mta referrer fr√•n URL
const urlParams = new URLSearchParams(window.location.search);
const [referrer, setReferrer] = useState(urlParams.get('referrer') || null);

  useEffect(() => {
    fetch(`${API_BASE_URL}/api/waitlist/count`)
      .then(res => res.json())
      .then(data => setWaitlistCount(data.count || 0))
      .catch(() => setWaitlistCount(0));
  }, []);

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!email || !name) return;

    setIsSubmitting(true);
    try {
      const res = await fetch(`${API_BASE_URL}/api/waitlist`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email, name, referrer }) // üîë skickar v√§rvaren
      });

      if (res.ok) {
        // Show success overlay instead of toast
        setSuccessOverlay(true);
        setEmail('');
        setName('');
        setWaitlistCount(prev => prev + 1);
        // üëá Skapa anv√§ndarens unika referral-l√§nk
        const referralLink = `${window.location.origin}/waitlist?referrer=${encodeURIComponent(email)}`;
        setShareLinks({ copy: referralLink });

      } else {
        const data = await res.json();
        setToast({ open: true, message: data.error || 'N√•got gick fel', severity: 'error' });
      }
    } catch (err) {
      setToast({ open: true, message: 'N√•got gick fel. F√∂rs√∂k igen.', severity: 'error' });
    } finally {
      setIsSubmitting(false);
    }
  };

  const handleShare = (platform) => {
    if (!shareLinks) {
      setToast({ open: true, message: 'Registrera dig f√∂rst f√∂r att f√• en unik l√§nk!', severity: 'error' });
      return;
    }

    if (platform === 'copy') {
      navigator.clipboard.writeText(shareLinks.copy);
      setToast({ open: true, message: 'Din unika l√§nk kopierad! üìã', severity: 'success' });
    } else if (platform === 'email') {
      window.open(`mailto:?subject=Kolla in BookR&body=Registrera dig h√§r: ${encodeURIComponent(shareLinks.copy)}`);
    } else if (platform === 'whatsapp') {
      window.open(`https://wa.me/?text=${encodeURIComponent("Kolla in BookR: " + shareLinks.copy)}`);
    }
  };

  const handleShareWaitlist = async (platform) => {
    if (!shareLinks) {
      setToast({ open: true, message: 'Registrera dig f√∂rst f√∂r att f√• en unik l√§nk!', severity: 'error' });
      return;
    }

    if (platform === 'copy' || platform === 'email' || platform === 'whatsapp') {
      if (shareLinks[platform]) {
    }

      try {
        const res = await fetch(`${API_BASE_URL}/api/waitlist/share`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' }
        });
        const data = await res.json();
        setShareLinks(data.shareLinks);
        
        if (platform === 'copy') {
          navigator.clipboard.writeText(data.waitlistUrl);
          setToast({ open: true, message: 'L√§nk kopierad! üìã', severity: 'success' });
        } else {
          window.open(data.shareLinks[platform], '_blank');
        }
      } catch (err) {
        setToast({ open: true, message: 'N√•got gick fel', severity: 'error' });
      }
    } else {
      if (platform === 'copy') {
        navigator.clipboard.writeText('https://www.onebookr.se/waitlist');
        setToast({ open: true, message: 'L√§nk kopierad! üìã', severity: 'success' });
      } else {
        window.open(shareLinks[platform], '_blank');
      }
    }
  };

  const faqData = [
    {
      question: "Vad √§r BookR och varf√∂r beh√∂ver jag det?",
      answer: "BookR l√∂ser det mest irriterande problemet i arbetslivet: att boka m√∂ten. Ist√§llet f√∂r 10+ mejl fram och tillbaka loggar alla bara in, ser direkt n√§r ni alla √§r lediga, klickar p√• en tid och f√•r Google Meet-l√§nk automatiskt. Sparar timmar varje vecka."
    },
    {
      question: "Hur mycket tid sparar jag egentligen?",
      answer: "Genomsnittspersonen spenderar 2-3 timmar per vecka p√• att koordinera m√∂ten via mejl. Med BookR tar det 30 sekunder. Det √§r 2,5 timmar tillbaka i veckan ‚Äì √∂ver 100 timmar per √•r som du kan anv√§nda till viktigare saker."
    },
    {
      question: "Kan andra se vad jag g√∂r i min kalender?",
      answer: "NEJ! BookR l√§ser bara om du √§r 'ledig' eller 'upptagen' ‚Äì aldrig vad du g√∂r, var du √§r eller med vem. Det √§r som att fr√•ga 'Kan du p√• tisdag 14:00?' och f√• svaret 'Ja' eller 'Nej' ‚Äì inget mer."
    },
    {
      question: "Vad h√§nder n√§r alla accepterat en tid?",
      answer: "Magi! ü™Ñ BookR skapar automatiskt en Google Calendar-h√§ndelse, skickar ut inbjudningar till alla, och genererar en Google Meet-l√§nk. Alla f√•r mejl med m√∂tesdetaljer. Du beh√∂ver inte g√∂ra n√•got mer."
    },
    {
      question: "Kostar det n√•got?",
      answer: "Grundfunktionerna √§r alltid 100% gratis f√∂r privatpersoner och sm√• grupper. Vi planerar premiumfunktioner f√∂r stora f√∂retag senare, men du kommer alltid kunna anv√§nda BookR gratis f√∂r dina vardagsm√∂ten."
    },
    {
      question: "N√§r kan jag b√∂rja anv√§nda BookR?",
      answer: "Vi lanserar inom n√•gra veckor! Genom att g√• med p√• v√§ntelistan f√•r du tidig access innan alla andra. Du f√•r ett mejl s√• fort vi √§r redo ‚Äì inga spam, bara en notis n√§r du kan b√∂rja spara tid."
    }
  ];

  return (
    <Box sx={{ minHeight: '100vh', bgcolor: '#f8fafc' }}>
      {/* Hero Section */}
      <Container maxWidth="lg" sx={{ pt: 12, pb: 8 }}>
        <Box sx={{ textAlign: 'center', mb: 8 }}>
          <Typography variant="h1" sx={{
            fontSize: { xs: '2.8rem', md: '4rem' },
            fontWeight: 700,
            color: '#0a2540',
            mb: 3,
            lineHeight: 1.1,
            fontFamily: "'Inter', 'Segoe UI', 'Roboto', sans-serif"
          }}>
            Planera smartare. Hitta gemensamma tider ‚Äì p√• sekunder.
          </Typography>
          <Typography variant="h2" sx={{
            fontSize: { xs: '1.3rem', md: '1.6rem' },
            color: '#425466',
            mb: 6,
            fontWeight: 400,
            lineHeight: 1.4,
            maxWidth: 600,
            mx: 'auto'
          }}>
            Anslut din Google-kalender och se direkt n√§r du och dina v√§nner √§r lediga. 
            Slipp mejlkaoset ‚Äì boka m√∂ten p√• 30 sekunder.
          </Typography>

          {/* Signup Form */}
          <Paper component="form" onSubmit={handleSubmit} sx={{
            p: 4,
            borderRadius: 4,
            boxShadow: '0 12px 48px rgba(99,91,255,0.15)',
            border: '1px solid #e3e8ff',
            maxWidth: 500,
            mx: 'auto',
            mb: 4
          }}>
            <Typography variant="h6" sx={{ 
              color: '#0a2540', 
              fontWeight: 600, 
              mb: 3,
              fontSize: '1.2rem'
            }}>
              üöÄ G√• med p√• v√§ntelistan
            </Typography>
            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2.5 }}>
              <TextField
                label="Ditt namn"
                value={name}
                onChange={(e) => setName(e.target.value)}
                required
                fullWidth
                sx={{ '& .MuiOutlinedInput-root': { borderRadius: 3 } }}
              />
              <TextField
                label="E-postadress"
                type="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                required
                fullWidth
                sx={{ '& .MuiOutlinedInput-root': { borderRadius: 3 } }}
              />
              <Button
                type="submit"
                variant="contained"
                disabled={isSubmitting}
                sx={{
                  py: 2.5,
                  borderRadius: 3,
                  background: 'linear-gradient(90deg, #635bff 0%, #6c47ff 100%)',
                  fontWeight: 700,
                  fontSize: '1.1rem',
                  boxShadow: '0 4px 20px rgba(99,91,255,0.4)',
                  '&:hover': {
                    background: 'linear-gradient(90deg, #7a5af8 0%, #635bff 100%)',
                    transform: 'translateY(-2px)',
                    boxShadow: '0 8px 32px rgba(99,91,255,0.5)',
                  }
                }}
              >
                {isSubmitting ? 'Registrerar...' : 'G√• med p√• v√§ntelistan'}
              </Button>
            </Box>
          </Paper>

          {/* Social Proof */}
          <Typography variant="body1" sx={{ 
            color: '#666', 
            fontSize: '1.1rem',
            mb: 1
          }}>
            üéâ <strong>{waitlistCount}+ personer</strong> v√§ntar redan
          </Typography>
          <Typography variant="body2" sx={{ color: '#888', mb: 6 }}>
            100% gratis ‚Ä¢ Inga kreditkort ‚Ä¢ Lanseras inom kort
          </Typography>
          
          {/* Share Section */}
          <Paper sx={{
            p: 4,
            borderRadius: 4,
            border: '1px solid #e3e8ff',
            maxWidth: 500,
            mx: 'auto',
            bgcolor: '#f8f9ff'
          }}>
            <Typography variant="h6" sx={{ 
              color: '#0a2540', 
              fontWeight: 600, 
              mb: 2,
              textAlign: 'center'
            }}>
              üíå Dela med v√§nner
            </Typography>
            <Typography variant="body2" sx={{ 
              color: '#666', 
              mb: 3,
              textAlign: 'center'
            }}>
              K√§nner du n√•gon som ocks√• sl√∂sar tid p√• att boka m√∂ten? Dela BookR!
            </Typography>
            <Grid container spacing={2}>
              <Grid item xs={6}>
                <Button
                  variant="outlined"
                  fullWidth
                  onClick={() => handleShare('email')}
                  sx={{
                    borderRadius: 2,
                    fontWeight: 600,
                    borderColor: '#635bff',
                    color: '#635bff',
                    '&:hover': {
                      borderColor: '#635bff',
                      bgcolor: 'rgba(99,91,255,0.1)'
                    }
                  }}
                >
                  üìß E-post
                </Button>
              </Grid>
              <Grid item xs={6}>
                <Button
                  variant="outlined"
                  fullWidth
                  onClick={() => handleShare('whatsapp')}
                  sx={{
                    borderRadius: 2,
                    fontWeight: 600,
                    borderColor: '#25D366',
                    color: '#25D366',
                    '&:hover': {
                      borderColor: '#25D366',
                      bgcolor: 'rgba(37,211,102,0.1)'
                    }
                  }}
                >
                  üì± WhatsApp
                </Button>
              </Grid>
              <Grid item xs={12}>
                <Button
                  variant="contained"
                  fullWidth
                  onClick={() => handleShare('copy')}
                  sx={{
                    borderRadius: 2,
                    fontWeight: 600,
                    bgcolor: '#635bff',
                    '&:hover': {
                      bgcolor: '#7a5af8'
                    }
                  }}
                >
                  üîó Kopiera l√§nk
                </Button>
              </Grid>
            </Grid>
          </Paper>
        </Box>
      </Container>

      {/* How it works */}
      <Box sx={{ bgcolor: '#fff', py: 10 }}>
        <Container maxWidth="lg">
          <Typography variant="h3" sx={{
            textAlign: 'center',
            mb: 8,
            fontSize: { xs: '2.2rem', md: '2.8rem' },
            fontWeight: 700,
            color: '#0a2540'
          }}>
            S√• enkelt fungerar det
          </Typography>
          
          <Grid container spacing={6} justifyContent="center">
            {[
              {
                step: '1',
                title: 'Anslut kalender',
                description: 'Logga in s√§kert med Google. Vi l√§ser bara ledig/upptagen ‚Äì aldrig vad du g√∂r.',
                icon: 'üîó',
                color: '#e8f5e8'
              },
              {
                step: '2', 
                title: 'Bjud in v√§nner',
                description: 'Skicka en l√§nk till kollegor, v√§nner eller familj. De loggar in p√• samma s√§tt.',
                icon: 'üì©',
                color: '#e3f2fd'
              },
              {
                step: '3',
                title: 'Se lediga tider',
                description: 'BookR j√§mf√∂r automatiskt alla kalendrar och visar n√§r ni alla √§r fria.',
                icon: '‚ö°',
                color: '#fff3e0'
              },
              {
                step: '4',
                title: 'Boka med ett klick',
                description: 'V√§lj tid, alla accepterar, Google Meet-l√§nk skapas. Klart p√• 30 sekunder!',
                icon: 'üéâ',
                color: '#f3e5f5'
              }
            ].map((item, index) => (
              <Grid item xs={12} sm={6} md={3} key={index}>
                <Box sx={{ textAlign: 'center', px: 2 }}>
                  <Box sx={{
                    width: 80,
                    height: 80,
                    borderRadius: '50%',
                    bgcolor: item.color,
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    mx: 'auto',
                    mb: 3,
                    fontSize: '2rem',
                    position: 'relative'
                  }}>
                    {item.icon}
                    <Box sx={{
                      position: 'absolute',
                      top: -8,
                      right: -8,
                      width: 32,
                      height: 32,
                      borderRadius: '50%',
                      bgcolor: '#635bff',
                      color: '#fff',
                      display: 'flex',
                      alignItems: 'center',
                      justifyContent: 'center',
                      fontWeight: 700,
                      fontSize: '1rem'
                    }}>
                      {item.step}
                    </Box>
                  </Box>
                  <Typography variant="h6" sx={{ 
                    mb: 2, 
                    fontWeight: 600, 
                    color: '#0a2540',
                    fontSize: '1.3rem'
                  }}>
                    {item.title}
                  </Typography>
                  <Typography variant="body2" sx={{ 
                    color: '#666', 
                    lineHeight: 1.6,
                    fontSize: '1rem'
                  }}>
                    {item.description}
                  </Typography>
                </Box>
              </Grid>
            ))}
          </Grid>
          
          {/* Process Flow */}
          <Box sx={{ textAlign: 'center', mt: 8, py: 4 }}>
            <Typography variant="body1" sx={{ 
              color: '#635bff', 
              fontWeight: 600,
              fontSize: '1.2rem',
              mb: 2
            }}>
              Fr√•n 15+ mejl och timmar av planering...
            </Typography>
            <Typography variant="h4" sx={{ 
              color: '#2e7d32', 
              fontWeight: 700,
              fontSize: '1.8rem',
              mb: 6
            }}>
              ...till 30 sekunder och klart! ‚ú®
            </Typography>
            
            {/* Detailed explanation */}
            <Container maxWidth="md">
              <Typography variant="body1" sx={{
                color: '#425466',
                fontSize: '1.2rem',
                lineHeight: 1.7,
                textAlign: 'left',
                mb: 4
              }}>
                <strong>Sluta sl√∂sa tid p√• det mest irriterande i arbetslivet.</strong> Varje vecka spenderar du timmar p√• att 
                koordinera m√∂ten via mejl. "N√§r passar det?" "Inte m√•ndag..." "Tisdag d√•?" "Nej, har tandl√§kare..." 
                Och s√• forts√§tter det. BookR g√∂r slut p√• detta kaos f√∂r alltid.
              </Typography>
              
              <Typography variant="body1" sx={{
                color: '#425466',
                fontSize: '1.2rem',
                lineHeight: 1.7,
                textAlign: 'left',
                mb: 4
              }}>
                <strong>Ist√§llet f√∂r 15+ mejl och flera dagars v√§ntan</strong> ser ni direkt n√§r alla √§r lediga. BookR 
                analyserar allas kalendrar samtidigt och visar endast de <strong>perfekta tiderna</strong> n√§r ni alla kan. 
                Inga gissningar, inga missf√∂rst√•nd, inga dubbelbokningar.
              </Typography>
              
              <Typography variant="body1" sx={{
                color: '#425466',
                fontSize: '1.2rem',
                lineHeight: 1.7,
                textAlign: 'left'
              }}>
                <strong>Det b√§sta av allt?</strong> N√§r ni v√§l hittat en tid tar BookR hand om resten. Google Meet-l√§nk, 
                kalenderinbjudningar, p√•minnelser ‚Äì allt skapas automatiskt. Ni g√•r fr√•n "Vi beh√∂ver tr√§ffas" 
                till ett fullst√§ndigt bokat m√∂te p√• <strong>30 sekunder</strong>. Det √§r s√• h√§r m√∂tesplanering ska fungera.
              </Typography>
            </Container>
          </Box>
        </Container>
      </Box>

      {/* Dold admin-knapp */}
      <Box sx={{
        position: 'fixed',
        bottom: 10,
        right: 10,
        width: 20,
        height: 20,
        cursor: 'pointer',
        opacity: 0.1,
        '&:hover': { opacity: 0.3 }
      }} onClick={() => {
        const password = prompt('Admin l√∂senord:');
        if (password) {
          fetch('/api/admin/login', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ password })
          }).then(res => res.json()).then(data => {
            if (data.success) {
              window.location.href = '/dashboard';
            } else {
              alert('Fel l√∂senord');
            }
          });
        }
      }}>
        ‚öôÔ∏è
      </Box>

      {/* Timeline Section */}
      <Box sx={{ bgcolor: '#f8fafc', py: 10 }}>
        <Container maxWidth="lg">
          <Typography variant="h3" sx={{
            textAlign: 'center',
            mb: 8,
            fontSize: { xs: '2.2rem', md: '2.8rem' },
            fontWeight: 700,
            color: '#0a2540'
          }}>
            V√•r utvecklingsplan
          </Typography>
          
          <Box sx={{ position: 'relative', maxWidth: 800, mx: 'auto' }}>
            {/* Timeline Line */}
            <Box sx={{
              position: 'absolute',
              left: '50%',
              top: 0,
              bottom: 0,
              width: 2,
              bgcolor: '#e3e8ee',
              transform: 'translateX(-50%)'
            }} />
            
            {/* Timeline Items */}
            {[
              {
                date: '15/10',
                title: 'Grupp events',
                description: 'Dela arbetsuppgifter i grupp som interagerar med kalendern',
                status: 'soon'
              },
              {
                date: '1/10', 
                title: 'Task',
                description: 'Automatisk tidsplanering och event placering i kalendern',
                status: 'completed'
              },
              {
                date: '21/8',
                title: 'Kalenderj√§mf√∂rare',
                description: 'Kalenderj√§mf√∂relse med hur m√•nga kalendrar som helst samtidigt',
                status: 'completed'
              },
              {
                date: '11/8',
                title: 'Google Meet Integration',
                description: 'Google Meet-l√§nk skapas automatiskt n√§r m√∂ten bokas i kalendern',
                status: 'completed'
              },
              {
                date: '10/8',
                title: 'Kalenderj√§mf√∂rare',
                description: 'J√§mf√∂ra kalendrar med varandra samtidigt och hitta lediga tider tillsammans 1v1',
                status: 'completed'
              }
            ].map((item, index) => (
              <Box key={index} sx={{
                display: 'flex',
                alignItems: 'center',
                mb: 6,
                position: 'relative'
              }}>
                {/* Timeline Dot */}
                <Box sx={{
                  position: 'absolute',
                  left: '50%',
                  width: 16,
                  height: 16,
                  borderRadius: '50%',
                  bgcolor: item.status === 'completed' ? '#4caf50' : '#ff9800',
                  transform: 'translateX(-50%)',
                  zIndex: 2,
                  border: '3px solid #fff',
                  boxShadow: '0 2px 8px rgba(0,0,0,0.1)'
                }} />
                
                {/* Content */}
                <Box sx={{
                  width: '45%',
                  ml: index % 2 === 0 ? 0 : 'auto',
                  mr: index % 2 === 0 ? 'auto' : 0,
                  textAlign: index % 2 === 0 ? 'right' : 'left',
                  pr: index % 2 === 0 ? 4 : 0,
                  pl: index % 2 === 0 ? 0 : 4
                }}>
                  <Typography variant="caption" sx={{
                    color: '#666',
                    fontWeight: 600,
                    fontSize: '0.9rem',
                    display: 'block',
                    mb: 1
                  }}>
                    {item.date}
                  </Typography>
                  
                  <Paper sx={{
                    p: 3,
                    borderRadius: 3,
                    bgcolor: '#fff',
                    boxShadow: '0 4px 20px rgba(0,0,0,0.08)',
                    border: '1px solid #e3e8ee',
                    position: 'relative'
                  }}>
                    {item.status === 'soon' && (
                      <Box sx={{
                        position: 'absolute',
                        top: -8,
                        right: -8,
                        bgcolor: '#ff9800',
                        color: '#fff',
                        px: 2,
                        py: 0.5,
                        borderRadius: 2,
                        fontSize: '0.75rem',
                        fontWeight: 600
                      }}>
                        SOON
                      </Box>
                    )}
                    
                    <Typography variant="h6" sx={{
                      fontWeight: 600,
                      color: '#0a2540',
                      mb: 1,
                      fontSize: '1.1rem'
                    }}>
                      {item.title}
                    </Typography>
                    
                    <Typography variant="body2" sx={{
                      color: '#666',
                      lineHeight: 1.5
                    }}>
                      {item.description}
                    </Typography>
                  </Paper>
                </Box>
              </Box>
            ))}
          </Box>
        </Container>
      </Box>

      {/* Key Benefits */}
      <Container maxWidth="md" sx={{ py: 10 }}>
        <Typography variant="h3" sx={{
          textAlign: 'center',
          mb: 8,
          fontSize: { xs: '2.2rem', md: '2.8rem' },
          fontWeight: 700,
          color: '#0a2540'
        }}>
          Varf√∂r BookR?
        </Typography>
        
        <Grid container spacing={6}>
          {[
            {
              title: 'Sparar 90% av tiden',
              description: 'Fr√•n timmar av mejlande till 30 sekunder. √ñver 100 timmar per √•r tillbaka i ditt liv.',
              icon: '‚è±Ô∏è'
            },
            {
              title: '100% s√§kert & privat',
              description: 'Vi l√§ser bara ledig/upptagen ‚Äì aldrig vad du g√∂r, var eller med vem. Googles s√§kerhet.',
              icon: 'üîí'
            },
            {
              title: 'Helt automatiskt',
              description: 'Meet-l√§nk, kalenderinbjudningar och p√•minnelser skapas automatiskt. Noll extra jobb.',
              icon: '‚ú®'
            }
          ].map((feature, index) => (
            <Grid item xs={12} md={4} key={index}>
              <Box sx={{ textAlign: 'center', p: 3 }}>
                <Typography sx={{ fontSize: '3.5rem', mb: 3 }}>
                  {feature.icon}
                </Typography>
                <Typography variant="h6" sx={{ 
                  mb: 2, 
                  fontWeight: 700, 
                  color: '#0a2540',
                  fontSize: '1.4rem'
                }}>
                  {feature.title}
                </Typography>
                <Typography variant="body1" sx={{ 
                  color: '#666', 
                  lineHeight: 1.6,
                  fontSize: '1.1rem'
                }}>
                  {feature.description}
                </Typography>
              </Box>
            </Grid>
          ))}
        </Grid>
      </Container>

      {/* FAQ */}
      <Container maxWidth="md" sx={{ py: 8 }}>
        <Typography variant="h3" sx={{
          textAlign: 'center',
          mb: 6,
          fontSize: { xs: '2rem', md: '2.5rem' },
          fontWeight: 700,
          color: '#0a2540'
        }}>
          Vanliga fr√•gor
        </Typography>
        
        {faqData.map((faq, index) => (
          <Accordion key={index} sx={{
            mb: 2,
            borderRadius: 2,
            border: '1px solid #e3e8ff',
            boxShadow: 'none',
            '&:before': { display: 'none' },
            '&.Mui-expanded': {
              boxShadow: '0 4px 20px rgba(99,91,255,0.1)'
            }
          }}>
            <AccordionSummary expandIcon={<ExpandMoreIcon />} sx={{ py: 2 }}>
              <Typography variant="h6" sx={{ fontWeight: 600, color: '#0a2540' }}>
                {faq.question}
              </Typography>
            </AccordionSummary>
            <AccordionDetails>
              <Typography sx={{ color: '#666', lineHeight: 1.6 }}>
                {faq.answer}
              </Typography>
            </AccordionDetails>
          </Accordion>
        ))}
      </Container>

      {/* CTA */}
      <Box sx={{ 
        background: 'linear-gradient(135deg, #635bff 0%, #6c47ff 100%)', 
        py: 8,
        position: 'relative',
        overflow: 'hidden'
      }}>
        <Container maxWidth="md" sx={{ textAlign: 'center', position: 'relative', zIndex: 1 }}>
          <Typography variant="h3" sx={{
            color: '#fff',
            mb: 2,
            fontSize: { xs: '2rem', md: '2.5rem' },
            fontWeight: 700
          }}>
            Sluta sl√∂sa 2+ timmar i veckan p√• att boka m√∂ten
          </Typography>
          <Typography variant="h6" sx={{ 
            color: 'rgba(255,255,255,0.95)', 
            mb: 1,
            fontSize: '1.3rem',
            fontWeight: 500
          }}>
            √ñver 100 sparade timmar per √•r = mer tid f√∂r det som verkligen r√§knas
          </Typography>
          <Typography variant="body1" sx={{ 
            color: 'rgba(255,255,255,0.8)', 
            mb: 4,
            fontSize: '1.1rem'
          }}>
            G√• med p√• v√§ntelistan nu och f√• tidig access n√§r vi lanserar ‚Ä¢ Helt gratis ‚Ä¢ Inga kreditkort
          </Typography>
          <Button
            variant="contained"
            size="large"
            onClick={() => document.querySelector('form').scrollIntoView({ behavior: 'smooth' })}
            sx={{
              py: 2.5,
              px: 5,
              borderRadius: 4,
              bgcolor: '#fff',
              color: '#635bff',
              fontWeight: 700,
              fontSize: '1.2rem',
              boxShadow: '0 8px 32px rgba(0,0,0,0.3)',
              '&:hover': {
                bgcolor: '#f8f9ff',
                transform: 'translateY(-3px)',
                boxShadow: '0 12px 48px rgba(0,0,0,0.4)'
              }
            }}
          >
            üöÄ Ja, jag vill spara 100+ timmar per √•r!
          </Button>
          <Typography variant="caption" sx={{ 
            display: 'block',
            color: 'rgba(255,255,255,0.7)', 
            mt: 2,
            fontSize: '0.9rem'
          }}>
            ‚ú® {waitlistCount}+ personer v√§ntar redan ‚Ä¢ Lanseras inom n√•gra veckor
          </Typography>
        </Container>
      </Box>

      {/* Success Overlay */}
      {successOverlay && (
        <Box sx={{
          position: 'fixed',
          top: 0,
          left: 0,
          width: '100%',
          height: '100%',
          bgcolor: 'rgba(0,0,0,0.8)',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          zIndex: 9999
        }}>
          <Paper sx={{
            p: 6,
            borderRadius: 4,
            textAlign: 'center',
            maxWidth: 500,
            mx: 2,
            background: 'linear-gradient(135deg, #f8fff8 0%, #e8f5e8 100%)',
            border: '2px solid #4caf50'
          }}>
            <Typography sx={{ fontSize: '4rem', mb: 2 }}>üéâ</Typography>
            <Typography variant="h4" sx={{
              color: '#2e7d32',
              fontWeight: 700,
              mb: 2
            }}>
              V√§lkommen till v√§ntelistan!
            </Typography>
            <Typography variant="body1" sx={{
              color: '#1b5e20',
              fontSize: '1.2rem',
              mb: 3,
              lineHeight: 1.6
            }}>
              Tack f√∂r att du skrev upp dig! Du kommer att f√• ett mejl s√• snart BookR lanseras 
              med tidig access till alla funktioner.
            </Typography>
            <Typography variant="body2" sx={{
              color: '#2e7d32',
              mb: 4,
              fontWeight: 600
            }}>
              Du √§r nu person #{waitlistCount} p√• v√§ntelistan
            </Typography>
            <Button
              variant="contained"
              onClick={() => setSuccessOverlay(false)}
              sx={{
                bgcolor: '#4caf50',
                color: '#fff',
                fontWeight: 600,
                py: 1.5,
                px: 4,
                borderRadius: 3,
                '&:hover': {
                  bgcolor: '#45a049'
                }
              }}
            >
              St√§ng
            </Button>
          </Paper>
        </Box>
      )}

      {/* Footer */}
      <Box
        component="footer"
        sx={{
          width: '100%',
          bgcolor: 'transparent',
          textAlign: 'center',
          py: 3,
          color: 'text.secondary',
          fontSize: 15,
          letterSpacing: 0.2,
          borderTop: '1px solid #e0e3e7',
        }}
      >
        ¬© {new Date().getFullYear()} BookR ‚Äì Hitta lediga tider tillsammans nu| <a href="mailto:info@onebookr.se" style={{ color: '#1976d2', textDecoration: 'none' }}>info@onebookr.se</a>
      </Box>

      <Snackbar
        open={toast.open}
        autoHideDuration={6000}
        onClose={() => setToast({ ...toast, open: false })}
      >
        <Alert severity={toast.severity} onClose={() => setToast({ ...toast, open: false })}>
          {toast.message}
        </Alert>
      </Snackbar>
    </Box>
  );
};

export default Waitlist;